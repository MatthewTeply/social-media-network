// SIMPLE GRID 

// fonts
$font-weight-light: 300;
$font-weight-regular: 400;
$font-weight-heavy: 700;
$font-height: 1.5;

// colors
$dark-grey: #333447;
$dark-gray: #333447; // for the Americans

// universal

html,
body {
  height: 100%;
  width: 100%;
  left: 0;
  top: 0;
  font-size: 100%;
}

* {
  // color: $dark-grey;
  line-height: $font-height;
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

// typography

.font-light {
  font-weight: $font-weight-light;
}

.font-regular {
  font-weight: $font-weight-regular;
}

.font-heavy {
  font-weight: $font-weight-heavy;
}

// utility

.left {
  text-align: left;
}

.right {
  text-align: right;
}

.center {
  text-align: center;
  margin-left: auto;
  margin-right: auto;
}

.justify {
  text-align: justify;
}

.hidden-sm {
  display: none;
}

// flex
.flex {
    display: flex;
}

.justify-content-center {
    justify-content: center;
}

.justify-content-between {
    justify-content: space-between;
}

.justify-content-around {
    justify-content: space-around;
}

.justify-content-evenly {
    justify-content: space-evenly;
}

.justify-content-start {
    justify-content: flex-start;
}

.justify-content-end {
    justify-content: flex-end;
}

.align-content-center {
    align-content: center;
}

.align-content-start {
    align-content: flex-start;
}

.align-content-end {
    align-content: flex-end;
}

.align-content-stretch {
    align-content: stretch;
}

.align-items-center {
    align-items: center;
}

.align-items-start {
    align-items: flex-start;
}

.align-items-end {
    align-items: flex-end;
}

.align-items-stretch {
    align-items: stretch;
}

.flex-wrap {
    flex-wrap: wrap;
}

.flex-wrap-reverse {
    flex-wrap: wrap-reverse;
}

.flex-nowrap {
    flex-wrap: nowrap;
}

.flex-row {
    flex-direction: row;
}

.flex-row-reverse {
    flex-direction: row-reverse;
}

.flex-column {
    flex-direction: column;
}

.flex-column-reverse {
    flex-direction: column-reverse;
}

// grid

$width: 96%;
$gutter: 4%;
$breakpoint-small: 33.75em; // 540px
$breakpoint-med: 45em; // 720px
$breakpoint-large: 60em; // 960px

.container {
  width: 90%;
  margin-left: auto;
  margin-right: auto;

  @media only screen and (min-width: $breakpoint-small) {
    width: 80%;
  }

  @media only screen and (min-width: $breakpoint-large) {
    width: 75%;
    max-width: 60rem;
  }
}

.row {
  position: relative;
  width: 100%;
}

.row [class^="col"] {
  float: left;
  margin: 0.5rem 2%;
  min-height: 0.125rem;
}

.row::after {
  content: "";
  display: table;
  clear: both;
}

.col-1,
.col-2,
.col-3,
.col-4,
.col-5,
.col-6,
.col-7,
.col-8,
.col-9,
.col-10,
.col-11,
.col-12 {
  width: $width;
}

.col-1-sm { width:($width / 12) - ($gutter * 11 / 12); }
.col-2-sm { width: ($width / 6) - ($gutter * 10 / 12); }
.col-3-sm { width: ($width / 4) - ($gutter * 9 / 12); }
.col-4-sm { width: ($width / 3) - ($gutter * 8 / 12); }
.col-5-sm { width: ($width / (12 / 5)) - ($gutter * 7 / 12); }
.col-6-sm { width: ($width / 2) - ($gutter * 6 / 12); }
.col-7-sm { width: ($width / (12 / 7)) - ($gutter * 5 / 12); }
.col-8-sm { width: ($width / (12 / 8)) - ($gutter * 4 / 12); }
.col-9-sm { width: ($width / (12 / 9)) - ($gutter * 3 / 12); }
.col-10-sm { width: ($width / (12 / 10)) - ($gutter * 2 / 12); }
.col-11-sm { width: ($width / (12 / 11)) - ($gutter * 1 / 12); }
.col-12-sm { width: $width; }

@media only screen and (min-width: $breakpoint-med) {
  .col-1 { width:($width / 12) - ($gutter * 11 / 12); }
  .col-2 { width: ($width / 6) - ($gutter * 10 / 12); }
  .col-3 { width: ($width / 4) - ($gutter * 9 / 12); }
  .col-4 { width: ($width / 3) - ($gutter * 8 / 12); }
  .col-5 { width: ($width / (12 / 5)) - ($gutter * 7 / 12); }
  .col-6 { width: ($width / 2) - ($gutter * 6 / 12); }
  .col-7 { width: ($width / (12 / 7)) - ($gutter * 5 / 12); }
  .col-8 { width: ($width / (12 / 8)) - ($gutter * 4 / 12); }
  .col-9 { width: ($width / (12 / 9)) - ($gutter * 3 / 12); }
  .col-10 { width: ($width / (12 / 10)) - ($gutter * 2 / 12); }
  .col-11 { width: ($width / (12 / 11)) - ($gutter * 1 / 12); }
  .col-12 { width: $width; }

  .hidden-sm {
    display: block;
  }
}


// Spacing
$spacingLevels: 8;

@mixin Spacing($type, $sideType, $unit, $breakpoint) {
  $typeMark: str-slice(#{$type}, 1, 1); // get first letter of type 
  $breakMark: "";

  // If breakpoint exists
  @if ($breakpoint != "") {
      $breakMark: -#{$breakpoint};
  }

  @if ($sideType == "single") {
      $sides: "top", "bottom", "right", "left";

      @each $side in $sides {
          $sideMark: str-slice(#{$side}, 1, 1); // get first letter of side 
      
          @for $i from 0 through $spacingLevels {
              .#{$typeMark}-#{$sideMark}-#{$i}#{$breakMark} {
                  #{$type}-#{$side}: #{$i}#{$unit};
              }
          }
      }
  } @else if ($sideType == "double") {
      $sides: "x", "y";

      @each $side in $sides {
          @if ($side == "x") {
              @for $i from 0 through $spacingLevels {
                  .#{$typeMark}-x-#{$i}#{$breakMark} {
                      #{$type}-left: #{$i}#{$unit};
                      #{$type}-right: #{$i}#{$unit};
                  }
              }
          } @else {
              @for $i from 0 through $spacingLevels {
                  .#{$typeMark}-y-#{$i}#{$breakMark} {
                      #{$type}-top: #{$i}#{$unit};
                      #{$type}-bottom: #{$i}#{$unit};
                  }
              }
          } 
      }
  } @else {
      @for $i from 0 through $spacingLevels {
          .#{$typeMark}-#{$i}#{$breakMark} {
              #{$type}: #{$i}#{$unit};
          }
      }   
  }
}

@mixin SpacingWrap($breakpoint) {
  // 3.1 Single Side Margin
  @include Spacing("margin", "single", "rem", $breakpoint);

  // 3.2 Double Side Margin
  @include Spacing("margin", "double", "rem", $breakpoint);

  // 3.3 All Sides Margin
  @include Spacing("margin", "all", "rem", $breakpoint);

  // 3.4 Single Side Padding
  @include Spacing("padding", "single", "rem", $breakpoint);

  // 3.5 Double Side Padding
  @include Spacing("padding", "double", "rem", $breakpoint);

  // 3.6 All Sides Padding
  @include Spacing("padding", "all", "rem", $breakpoint);
}

@mixin SpacingAll($lg, $md, $sm) {
  @include SpacingWrap(""); 

  @media (min-width: $sm) {
      @include SpacingWrap("sm"); 
  }
  
  @media (min-width: $md) {
      @include SpacingWrap("md");
  }

  @media (min-width: $lg) {
      @include SpacingWrap("lg");
  }
}

@include SpacingAll($breakpoint-large, $breakpoint-med, $breakpoint-small)